services:
  db:
    image: postgres:17
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: crud_rust
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    

  adminer:
    image: adminer:5
    restart: always
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: db
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 128M

  migration:
    image: kukymbr/goose-docker:3.24.2
    depends_on:
      db:
        condition: service_healthy
    environment:
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=db port=5432 user=postgres password=secret dbname=crud_rust sslmode=disable
    volumes:
      - ./migrations:/migrations
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 32M

  app:
    user: app
    build: 
      context: .
      dockerfile: infra/watch.Dockerfile
    ports:
      - 3000:3000
    environment:
      APP_NAME: crud
      HOST: 0.0.0.0
      PORT: 3000
      DATABASE_URL: postgres://postgres:secret@db:5432/crud_rust
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_completed_successfully
    volumes:
      - cargo_target:/app/target
    healthcheck:
      test: ["CMD", "curl", "${HOST}:${PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: cargo run
    develop:
      watch:
        - path: ./src
          target: /app/src
          action: sync+restart
        - path: ./Cargo.toml
          target: /app/Cargo.toml
          action: sync+restart
        - path: ./Cargo.lock
          target: /app/Cargo.lock
          action: sync+restart
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

volumes:
  db_data:
  cargo_target: