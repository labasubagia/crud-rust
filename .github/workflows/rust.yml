name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: postgres://${{ secrets.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@localhost:5432/crud_rust

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: crud_rust
        ports:
          - 5432:5432
        # Health checks to ensure postgres has started before running tests
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
    - uses: actions/checkout@v4
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-deps-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-deps-

    - name: Cache build outputs
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock', 'src/**') }}
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        cache: true

    - name: Cache Go binaries
      uses: actions/cache@v3
      with:
        path: ~/go/bin
        key: ${{ runner.os }}-go-binaries-goose-v3
        restore-keys: |
          ${{ runner.os }}-go-binaries-goose-v3

    - name: Install Goose (Go version)
      run: go install github.com/pressly/goose/v3/cmd/goose@latest
    
    - name: Run migrations with Goose
      env:
        DATABASE_URL: postgres://${{ secrets.DATABASE_USER }}:${{ secrets.DATABASE_PASSWORD }}@localhost:5432/crud_rust
      run: goose -dir ./migrations postgres $DATABASE_URL up

    - name: Clippy
      run: cargo clippy
    
    - name: Build
      run: cargo build
    
    - name: Run tests
      run: cargo test
